#!/bin/bash

set -e  # Exit on error

if [ "$#" -ne 2 ]; then
    echo "Usage: pypinstaller {install|remove} <pkgname>"
    exit 1
fi

ACTION="$1"
PKG_NAME="$2"

# Get Python binary and version
PYTHON_BIN=$(which python3)
PYTHON_VERSION=$("$PYTHON_BIN" -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")

# Find site-packages directory
SITE_PACKAGES=$(dirname "$PYTHON_BIN")/../lib/python$PYTHON_VERSION/site-packages
PKG_PATH="$SITE_PACKAGES/$PKG_NAME"

install_package() {
    # Get package download URL from PyPI
    PACKAGE_URL=$(curl -s "https://pypi.org/pypi/$PKG_NAME/json" | grep -o '"https://files.pythonhosted.org[^"]*' | head -n 1)

    if [ -z "$PACKAGE_URL" ]; then
        echo "Error: Package not found on PyPI."
        exit 1
    fi

    # Display loading animation
    loading() {
        local chars="/-\|"
        while true; do
            for (( i=0; i<${#chars}; i++ )); do
                printf "\rInstalling %s... [%c]" "$PKG_NAME" "${chars:$i:1}"
                sleep 0.1
            done
        done
    }

    loading &
    LOADING_PID=$!

    # Download and install the package
    TMP_DIR="/tmp/$PKG_NAME"
    mkdir -p "$TMP_DIR"
    curl -sL "$PACKAGE_URL" -o "$TMP_DIR/package.tar.gz"
    tar -xzf "$TMP_DIR/package.tar.gz" -C "$TMP_DIR"

    # Move extracted package to site-packages
    mv "$TMP_DIR"/* "$SITE_PACKAGES"

    # Kill loading animation
    kill "$LOADING_PID" >/dev/null 2>&1
    printf "\rInstallation complete!           \n"
}

remove_package() {
    if [ -d "$PKG_PATH" ]; then
        echo "Removing $PKG_NAME..."
        rm -rf "$PKG_PATH"
        echo "$PKG_NAME has been removed."
    else
        echo "Error: Package $PKG_NAME not found in site-packages."
    fi
}

# Execute action
case "$ACTION" in
    install)
        install_package
        ;;
    remove)
        remove_package
        ;;
    *)
        echo "Usage: pypinstaller {install|remove} <pkgname>"
        exit 1
        ;;
esac
